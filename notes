1) detect retardation from 'vibes' output
2) when we get a user command via sysCommandSent event or whatever, setup a timer for... 1-2s? ahead. When it expires, see if we got any sluggish messages - if not, we've been cured! However, lag needs to be accounted for - so we won't think we're cured when in reality we got no output back from the server.
  oh, we'll record the last line number received. If it's set to true at the end of the timer, then we saw sluggish. If it's a number, that's not the same as the current one, then we're clear! If it's a number that is the same, then we're just lagging. No fun, ignore this...


mm.locks = {}
event for locks gained/lost

- possible issue: system ignoring real actions on affs that need illusion checking - saving lifevision.l and then discarding it after

proper_stun needs to be before other affs, because it steals the current lifevision queue (pausing on checkstun is bad, holds up other things unnecessarily)


-- user input matching to Svof actions --
1) build a map of possible commands and actions they'd do
2) check against the map on user input - if it is, cancel it and use Svof action

we don't want systems commands triggering this though (as actions would be re-done unnecessarily), and to deal with batching working off a tempTimer 0, we record all system commands that were done.

-- printing on cmd line

start 2 timer objects: one master which will kill the other one after the time, and another that self-replicates to go over the cmd line
should be an object returned, should be able to manually 'step' it to go quicker, and it should store the data given inside it - as a table with an index on the current one

-- handling cadmus

allow people to select which affs should focus be used with: for example stupidity only, and not loneliness.

-- ninkharsag

if we had only 1 aff, remove the assumed aff. otherwise, add an unknowncured aff. if unknowncuredaffs after adding >= affs, clear all.
diagnose if we have more than x unknowncuredaffs

-- shrugging
approach it like tree:
- make an action, track it
- in shrugging cure trigger, only accept it if we're doing the action, open passive_healing then
- add to default of serpent prompts (and one-time as well)

---
Adding an aff:
- add in dict
- add in empty
- add in diag, add trigger
- add in simple/main, add trigger
- add in main for cure, add trigger
- add in tree curing (touchtree in dict and main)
- check fizzle and etc if applicable
